<?php

namespace CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use CoreBundle\Services\Crud\BuildInterface\CrudInterface;
use CoreBundle\Services\ListHasTree\BuildInterface\ListHasTreeInterface;

/**
 * TemplateEParagraphRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TemplateEParagraphRepository extends EntityRepository
{

    public function findAll($limit = null, $offset = null)
    {
        return $this->findBy(['isActive' => 1], ['idIncrement' => 'DESC'], $limit, $offset);
    }

    public function findOneByTemplateHasModule($templateHasModule)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT paragraph.paragraph
            FROM CoreBundle:TemplateEParagraph paragraph
            WHERE
            paragraph.templateHasModule = :templateHasModule AND
            paragraph.isActive = :active
            ";

        $query = $em->createQuery($dql);
        $query->setParameter('active', 1);
        $query->setParameter('templateHasModule', $templateHasModule);

        return $query->getOneOrNullResult();
    }

    public function findOneByTemplateHasModuleObj($templateHasModule)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT paragraph
            FROM CoreBundle:TemplateEParagraph paragraph
            WHERE
            paragraph.templateHasModule = :templateHasModule AND
            paragraph.isActive = :active
            ";

        $query = $em->createQuery($dql);
        $query->setParameter('active', 1);
        $query->setParameter('templateHasModule', $templateHasModule);

        return $query->getOneOrNullResult();
    }


    /*
    public function findParagraph($slug)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT paragraph, templateHasPage
            FROM CoreBundle:TemplateEParagraph paragraph
            INNER JOIN paragraph.templateHasPage templateHasPage
            WHERE
            paragraph.isActive = :active
            ";

//        templateHasPage
//        paragraph.idIncrement = :id AND

        $query = $em->createQuery($dql);
        $query->setParameter('active', 1);
//        $query->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }
    */

}
