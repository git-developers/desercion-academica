imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    date:
        timezone: America/Lima
    globals:
        project_name: 'Deserción Académica'
        project_name_html: '<b>DES</b>ACA'
        project_version: '%project_version%'
        project_url: '%project_url%'
        project_url_canonical: 'http://%project_url%'
        project_description: 'Aplicación que provee acceso a información almacenada digitalmente'
        project_image: 'http://%project_url%/xxx.jpg'
        project_favicon: 'http://%project_url%/favicon.ico'
        project_google_plus: 'https://plus.google.com/u/0/101583248641629113892'
        project_facebook: 'https://www.facebook.com/Apptianos'
        project_twitter: 'https://twitter.com/tianosApp'
        project_skin: 'skin-yellow'
        app_id: '%app_id%'
        theme_color: '%theme_color%'
        websocket_port: '8080'
        websocket_host: '%project_url%'
        locale: "%locale%"
        uploads_directory: "%uploads_directory%"
        google_client_id: "%google_client_id%"
        google_client_secret: "%google_client_secret%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci
        schema_filter: ~^(?!acl_)~
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

liip_imagine:
    resolvers: # configure resolvers
        default: # setup the default resolver
            web_path: ~ # use the default web path
                cache_prefix:  web/media/cache
#    loaders:
#        default:
#            filesystem:
#                data_root: /web/uploads
    filter_sets: # your filter sets are defined here
        cache: ~ # use the default cache configuration
        filter_160:
            quality: 75
            filters:
                thumbnail: { size: [160, 160], mode: outbound }
        filter_500:
            quality: 75
            filters:
                thumbnail: { size: [500, 500], mode: outbound }
        my_thumb: # the name of the "filter set"
            quality: 75 # adjust the image quality to 75%
            filters: # list of transformations to apply (the "filters")
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [120, 90], mode: outbound }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                background: { size: [124, 94], position: center, color: '#000000' }

assetic:
    debug: '%kernel.debug%'
    use_controller: '%kernel.debug%'
    bundles: [ CoreBundle, BackendBundle ]
    filters:
        cssrewrite: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: CoreBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: CoreBundle::Menu/menu.html.twig
    #  if true, enables the helper for PHP templates
#    templating: false
#    # the renderer to use, list is also available by default
#    default_renderer: twig